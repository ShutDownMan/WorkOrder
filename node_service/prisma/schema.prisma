generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Email {
  id        Int      @id(map: "Email_pk") @default(autoincrement())
  address   String
  primary   Boolean?
  id_Client String?  @db.Uuid
  Client    Client?  @relation(fields: [id_Client], references: [id], map: "Client_fk")
}

model Phone {
  id           Int        @id(map: "Phone_pk") @default(autoincrement())
  DDD          String?
  DDI          String?
  number       String
  primary      Boolean?
  id_PhoneType Int?
  id_Client    String?    @db.Uuid
  Client       Client?    @relation(fields: [id_Client], references: [id], map: "Client_fk")
  PhoneType    PhoneType? @relation(fields: [id_PhoneType], references: [id], map: "PhoneType_fk")
}

model PhoneType {
  id          Int     @id(map: "PhoneType_pk") @default(autoincrement())
  description String
  Phone       Phone[]
}

model Service {
  id                    Int            @id(map: "Service_pk") @default(autoincrement())
  description           String
  estimatedTimeCost     Int?
  estimatedMaterialCost Decimal?       @db.Money
  Task_Service          Task_Service[]
}

model Task {
  id           Int            @id(map: "WorkOrderTask_pk") @default(autoincrement())
  description  String?
  timeCost     Int?
  materialCost Decimal?       @db.Money
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  finishedAt   DateTime?      @db.Timestamp(6)
  id_Device    Int
  id_WorkOrder String         @db.Uuid
  Device       Device         @relation(fields: [id_Device], references: [id], map: "Device_fk")
  WorkOrder    WorkOrder      @relation(fields: [id_WorkOrder], references: [id], map: "WorkOrder_fk")
  Task_Service Task_Service[]
}

model WorkOrder {
  id                 String          @id(map: "WorkOrder_pk") @db.Uuid
  obs                String?
  createdAt          DateTime        @default(now()) @db.Timestamptz(6)
  finishedAt         DateTime?       @db.Timestamp(6)
  id_Client          String?         @db.Uuid
  id_WorkOrderStatus Int
  Client             Client?         @relation(fields: [id_Client], references: [id], map: "Client_fk")
  WorkOrderStatus    WorkOrderStatus @relation(fields: [id_WorkOrderStatus], references: [id], map: "WorkOrderStatus_fk")
  Task               Task[]
}

model WorkOrderStatus {
  id          Int         @id(map: "WorkOrderStatus_pk") @default(autoincrement())
  description String
  WorkOrder   WorkOrder[]
}

model Client {
  id        String      @id(map: "User_pk") @db.Uuid
  name      String
  firstName String
  lastName  String
  cpf       String      @unique(map: "cpf_Unique")
  active    Boolean     @default(true)
  Email     Email[]
  Phone     Phone[]
  WorkOrder WorkOrder[]
}

model Task_Service {
  id         Int     @id(map: "Task_Service_pk") @default(autoincrement())
  id_Task    Int
  id_Service Int
  Service    Service @relation(fields: [id_Service], references: [id], map: "Service_fk")
  Task       Task    @relation(fields: [id_Task], references: [id], map: "Task_fk")
}

model Device {
  id          Int     @id(map: "device_pk") @default(autoincrement())
  brand       String
  model       String
  description String?
  sku         String?
  photoURL    String?
  Task        Task[]
}
